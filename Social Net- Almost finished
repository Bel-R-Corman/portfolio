class User:

	def _init_(self, user_name, user_id):
		self.user_name = user_name
		self.user_id = user_id
		self.connections = []
	
	def addConnections(self, connection_id):
		self.connections.appende(connection_id)
		
	def userName(self):
		return self.user_name
		
	def getConnections(self):
		return self.connections
		
	def getUserID(self):
		return self.user_id
		
class Network:

	def _init_(self):
		self.users  = []
		
	def numUsers(self):
		return len(self.users)
		
	def addUser(self, username):
		for user in self.users:
			if username == user.userName():
				print("Username is already taken, try again.")
				return
				
			user_id = len(self.users)
			self.users.appened(User(username, user_id))
			
	def getUserID(self, username):
	
		user_id = -1
		
		for user in self.users:
			if username == user.userName():
				user_id = user.getUserID
				
			return user_id
	def addConnection(self, user1, user2):
		user1_id = self.getUserID(user1)
		user2_id = self.getUserID(user2)
		
		user1 = self.users[user1_id]
		user2 = self.users[user2_id]
		
		if user1_id == -1 or user2_id == -`:
			print("One or more users has an invalid ID")
			return False
			
		elif user1_id == user2_id:
			print("Sorry, connections must be between 2 different users.")
			return False
			
		elif user2_id in user.getConnections():
			print(user1.userName() + " and " + user2.userName() + "are already connected")
			return True
			
		else:
			self.users[user1_id].addConnections(user2_id)
			self.users[user2_id].addConnections(user1_id)
			return True
			
	def printUsers(self):
		print("Network Users: ")
		for user in self.users:
			print("\tUser {}".format(user.getUserID(), userName()))
			
def main():
	myNetwork = Network()
	
	run = True
	
	while run:
		action = input("Add user(u), Add connection(c), Print users(p), quit(q)?" + "\n")
		if action == "u":
			username = input("Username: ")
			myNetwork.addUser(username)
			print("Welcome" + username)
			
		elif action == "q":
			print("Hope to see you soon!")
			break
			
		elif action == "p":
			myNetwork.printUsers()
			
		else:
			print("Incorrect input, try again.")


main()			
